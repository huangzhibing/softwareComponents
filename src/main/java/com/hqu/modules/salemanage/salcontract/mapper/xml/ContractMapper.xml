<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqu.modules.salemanage.salcontract.mapper.ContractMapper">
    
	<sql id="contractColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.contract_code AS "contractCode",
		a.sign_date AS "signDate",
		a.contract_type_code AS "contractType.id",
		a.contract_type_name AS "contractTypeName",
		a.account_code AS "account.id",
		a.account_name AS "accountName",
		a.blnc_type_code AS "blncType.id",
		a.blnc_type_name AS "blncTypeName",
		a.person_code AS "person.id",
		a.person_name AS "personName",
		a.input_date AS "inputDate",
		a.input_person AS "inputPerson.id",
		a.contract_stat AS "contractStat",
		a.end_reason AS "endReason",
		a.end_person AS "endPerson.id",
		a.end_psn_name AS "endPsnName",
		a.end_date AS "endDate",
		a.pay_type_code AS "payType.id",
		a.pay_type_name AS "payTypeName",
		a.tax_ratio AS "saleTaxRatio.id",
		a.tranprice_payer AS "tranpricePayer",
		a.transfee_sum AS "transfeeSum",
		a.goods_sum AS "goodsSum",
		a.goods_sum_taxed AS "goodsSumTaxed",
		a.item_contents AS "itemContents",
		a.paper_ctr_code AS "paperCtrCode",
		a.pra_remark AS "praRemark",
		a.delivery_date AS "deliveryDate",
		contractType.ctr_type_name AS "contractType.ctrTypeName",
		contractType.ctr_type_code AS "contractType.ctrTypeCode",
		
		account.account_code AS "account.accountCode",
		account.account_name AS "account.accountName",
		
		blncType.blnc_type_code AS "blncType.blncTypeCode",
		blncType.blnc_type_name AS "blncType.blncTypeName",
		
		person.no AS "person.no",
		person.name AS "person.name",
		
		inputPerson.no AS "inputPerson.no",
		inputPerson.name AS "inputPerson.name",
		
		endPerson.no AS "endPerson.no",
		endPerson.name AS "endPerson.name",
		
		payType.type_code AS "payType.typeCode",
		payType.type_name AS "payType.typeName",
		
		saleTaxRatio.sal_tax_code AS "saleTaxRatio.salTaxCode",
		saleTaxRatio.sal_tax_ratio AS "saleTaxRatio.salTaxRatio",
		
		ctrItemsModel.item_order AS "ctrItemsModel.itemOrder",
		ctrItemsModel.item_name AS "ctrItemsModel.itemName",
		ctrItemsModel.item_contents AS "ctrItemsModel.itemContents"
	</sql>
	
	<sql id="contractJoins">
		
		LEFT JOIN sal_ctrtypedef contractType ON contractType.ctr_type_code = a.contract_type_code
		LEFT JOIN mdm_account account ON account.account_code = a.account_code
		LEFT JOIN sal_blnctypedef blncType ON blncType.blnc_type_code = a.blnc_type_code
		LEFT JOIN sys_user person ON person.no = a.person_code
		LEFT JOIN sys_user inputPerson ON inputPerson.no = a.input_person
		LEFT JOIN sys_user endPerson ON endPerson.no = a.end_person
		LEFT JOIN sal_paytypedef payType ON payType.type_code = a.pay_type_code
		LEFT JOIN sal_taxratio saleTaxRatio ON saleTaxRatio.sal_tax_code = a.tax_ratio
		LEFT JOIN sal_ctr_items_model ctrItemsModel ON ctrItemsModel.item_order=a.ctr_items_model
	</sql>
	
    
	<select id="get" resultType="Contract" >
		SELECT 
			<include refid="contractColumns"/>
		FROM sal_contract a
		<include refid="contractJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="getByCode" resultType="Contract" >
		SELECT
			<include refid="contractColumns"/>
		FROM sal_contract a
		<include refid="contractJoins"/>
		WHERE a.contract_code = #{id}
	</select>
	
	<select id="findList" resultType="Contract" >
		SELECT 
			<include refid="contractColumns"/>
		FROM sal_contract a
		<include refid="contractJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="contractCode != null and contractCode != ''">
				AND a.contract_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{contractCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{contractCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{contractCode},'%')</if>
			</if>
			<if test="beginSignDate != null and endSignDate != null and beginSignDate != '' and endSignDate != ''">
				AND a.sign_date BETWEEN #{beginSignDate} AND #{endSignDate}
			</if>
			<if test="contractType != null and contractType.ctrTypeCode != null and contractType.ctrTypeCode != ''">
				AND a.contract_type_code = #{contractType.ctrTypeCode}
			</if>
			<if test="contractStat != null and contractStat !='' and contractStat != 'WB' ">
				AND a.contract_stat = #{contractStat}
			</if>
			<if test="contractStat == 'WB' ">
				AND (a.contract_stat = 'W' OR a.contract_stat = 'B')
			</if>
			<if test="account != null and account.accountCode != null and account.accountCode != ''">
				AND a.account_code = #{account.accountCode}
			</if>
			<if test="accountName != null and accountName != ''">
				AND a.account_name = #{accountName}
			</if>
			<if test="person != null and person.no != null and person.no != ''">
				AND a.person_code = #{person.no}
			</if>
			<if test="personName != null and personName != ''">
				AND a.person_name = #{personName}
			</if>
			<if test="paperCtrCode != null and paperCtrCode != ''">
				AND a.paper_ctr_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{paperCtrCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{paperCtrCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{paperCtrCode},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Contract" >
		SELECT 
			<include refid="contractColumns"/>
		FROM sal_contract a
		<include refid="contractJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sal_contract(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			contract_code,
			sign_date,
			contract_type_code,
			contract_type_name,
			account_code,
			account_name,
			blnc_type_code,
			blnc_type_name,
			person_code,
			person_name,
			input_date,
			input_person,
			contract_stat,
			end_reason,
			end_person,
			end_psn_name,
			end_date,
			pay_type_code,
			pay_type_name,
			tax_ratio,
			tranprice_payer,
			transfee_sum,
			goods_sum,
			goods_sum_taxed,
			item_contents,
			paper_ctr_code,
			pra_remark,
			ctr_items_model,
			delivery_date
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{contractCode},
			#{signDate},
			#{contractType.ctrTypeCode},
			#{contractTypeName},
			#{account.accountCode},
			#{accountName},
			#{blncType.blncTypeCode},
			#{blncTypeName},
			#{person.no},
			#{personName},
			#{inputDate},
			#{inputPerson.no},
			#{contractStat},
			#{endReason},
			#{endPerson.no},
			#{endPsnName},
			#{endDate},
			#{payType.typeCode},
			#{payTypeName},
			#{saleTaxRatio.salTaxCode},
			#{tranpricePayer},
			#{transfeeSum},
			#{goodsSum},
			#{goodsSumTaxed},
			#{ctrItemsModel.itemContents},
			#{paperCtrCode},
			#{praRemark},
			#{ctrItemsModel.itemOrder},
			#{deliveryDate}
		)
	</insert>
	
	<update id="update">
		UPDATE sal_contract SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			contract_code = #{contractCode},
			sign_date = #{signDate},
			contract_type_code = #{contractType.ctrTypeCode},
			contract_type_name = #{contractTypeName},
			account_code = #{account.accountCode},
			account_name = #{accountName},
			blnc_type_code = #{blncType.blncTypeCode},
			blnc_type_name = #{blncTypeName},
			person_code = #{person.no},
			person_name = #{personName},
			input_date = #{inputDate},
			input_person = #{inputPerson.no},
			contract_stat = #{contractStat},
			end_reason = #{endReason},
			end_person = #{endPerson.no},
			end_psn_name = #{endPsnName},
			end_date = #{endDate},
			pay_type_code = #{payType.typeCode},
			pay_type_name = #{payTypeName},
			tax_ratio = #{saleTaxRatio.salTaxCode},
			tranprice_payer = #{tranpricePayer},
			transfee_sum = #{transfeeSum},
			goods_sum = #{goodsSum},
			goods_sum_taxed = #{goodsSumTaxed},
			item_contents = #{itemContents},
			paper_ctr_code = #{paperCtrCode},
			pra_remark = #{praRemark},
			ctr_items_model = #{ctrItemsModel.itemOrder},<!-- 新加 -->
			delivery_date = #{deliveryDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM sal_contract
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE sal_contract SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Contract" statementType="STATEMENT">
		select * FROM sal_contract  where ${propertyName} = '${value}'
	</select>
	 <select id="getMaxIdByTypeAndDate" resultType="String">
        SELECT MAX(contract_code) FROM sal_contract WHERE contract_code LIKE concat(concat(#{_parameter}),"%")
    </select>
    <update id="updateStat" parameterType="java.util.Map">
    	update sal_contract set contract_stat = #{contractStat} where id=#{id} 
    </update>
    <update id="updateSuggestions" parameterType="java.util.Map">
    	update sal_contract set suggestions = #{suggestions} where id=#{id}
    </update>
</mapper>