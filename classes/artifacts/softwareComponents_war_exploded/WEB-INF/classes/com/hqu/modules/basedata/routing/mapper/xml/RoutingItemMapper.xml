<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqu.modules.basedata.routing.mapper.RoutingItemMapper">
    
	<sql id="routingItemColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.routing_code AS "routingCode.id",
		a.item_code AS "item.code",
		a.req_qty AS "reqQty",
		a.remark AS "remark",
		item.name AS "item.name"
	</sql>
	
	<sql id="routingItemJoins">
		
			LEFT JOIN mdm_routing b ON b.id = a.routing_code
		LEFT JOIN mdm_item item ON item.code = a.item_code
	</sql>
	
    
	<select id="get" resultType="RoutingItem" >
		SELECT 
			<include refid="routingItemColumns"/>
		FROM mdm_routingitem a
		<include refid="routingItemJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="RoutingItem" >
		SELECT 
			<include refid="routingItemColumns"/>
		FROM mdm_routingitem a
		<include refid="routingItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="routingCode != null and routingCode.id != null and routingCode.id != ''">
				AND a.routing_code = #{routingCode.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="RoutingItem" >
		SELECT 
			<include refid="routingItemColumns"/>
		FROM mdm_routingitem a
		<include refid="routingItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO mdm_routingitem(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			routing_code,
			item_code,
			req_qty,
			remark,
			product_code
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{routingCode.id},
			#{item.code},
			#{reqQty},
			#{remark},
			#{productCode}
		)
	</insert>
	
	<update id="update">
		UPDATE mdm_routingitem SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			routing_code = #{routingCode.id},
			item_code = #{item.code},
			req_qty = #{reqQty},
			remark = #{remark},
			product_code = #{productCode}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM mdm_routingitem
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE routing_code = #{routingCode.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE mdm_routingitem SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE routing_code = #{routingCode.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="RoutingItem" statementType="STATEMENT">
		select * FROM mdm_routingitem  where ${propertyName} = '${value}'
	</select>
	
</mapper>